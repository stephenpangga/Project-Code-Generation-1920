/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.19).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Body;
import io.swagger.model.Login;
import io.swagger.annotations.*;
import io.swagger.model.User;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-05-18T19:26:09.389Z[GMT]")
@Api(value = "login", description = "the login API")
public interface LoginApi {

    @ApiOperation(value = "Retrieve authorization token", nickname = "login", notes = "", response = Login.class, tags={ "Login", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Login.class),
        @ApiResponse(code = 400, message = "Invalid input"),
        @ApiResponse(code = 401, message = "Unauthorized") })
    @RequestMapping(value = "/login",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> login(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Body body
);

    @ApiOperation(value = "Get registered user by token", nickname = "login", notes = "", response = User.class, tags={ "Login", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "User is found", response = User.class),
            @ApiResponse(code = 401, message = "Unauthorized"),
            @ApiResponse(code = 404, message = "No user with that id") })
    @RequestMapping(value = "/login/{token}",
            produces = { "application/json" },
            method = RequestMethod.GET)
    ResponseEntity<User> getUserByToken(@ApiParam(value = "Auth token to search for",required=true) @PathVariable("token") String token
    );

}
